// <auto-generated />
using System;
using ClothingApp.Data.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClothingApp.Data.Common.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210630205015_InsertDb")]
    partial class InsertDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.BooleanRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoolType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BooleanRules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BoolType = 1,
                            IsExist = true
                        },
                        new
                        {
                            Id = 2L,
                            BoolType = 1,
                            IsExist = false
                        },
                        new
                        {
                            Id = 3L,
                            BoolType = 3,
                            IsExist = true
                        },
                        new
                        {
                            Id = 4L,
                            BoolType = 3,
                            IsExist = false
                        },
                        new
                        {
                            Id = 5L,
                            BoolType = 2,
                            IsExist = true
                        },
                        new
                        {
                            Id = 6L,
                            BoolType = 2,
                            IsExist = false
                        });
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.ClothingItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImageAccessory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImageFootwear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImageHat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImageOuterwear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImageUnderwear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClothingItems");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Man:15-20",
                            UrlImageAccessory = "./Resources/Images/Man/Man.15-20/umbrella.png",
                            UrlImageFootwear = "./Resources/Images/Man/Man.15-20/footwear_3.png",
                            UrlImageOuterwear = "./Resources/Images/Man/Man.15-20/hoodie.png",
                            UrlImageUnderwear = "./Resources/Images/Man/Man.15-20/jeans.png"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Man:20-25",
                            UrlImageAccessory = "./Resources/Images/Man/Man.20-25/umbrella.png",
                            UrlImageFootwear = "./Resources/Images/Man/Man.20-25/footwear_3.png",
                            UrlImageHat = "./Resources/Images/Man/Man.20-25/hat_3.png",
                            UrlImageOuterwear = "./Resources/Images/Man/Man.20-25/mens.png",
                            UrlImageUnderwear = "./Resources/Images/Man/Man.20-25/jeans.png"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "25-30",
                            UrlImageAccessory = "./Resources/Images/Man/Man.25-30/accessory_3.png",
                            UrlImageFootwear = "./Resources/Images/Man/Man.25-30/footwear_1.png",
                            UrlImageOuterwear = "./Resources/Images/Man/Man.25-30/shirt.png",
                            UrlImageUnderwear = "./Resources/Images/Man/Man.25-30/short.png"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "30-35",
                            UrlImageAccessory = "./Resources/Images/Man/Man.30-35/umbrella.png",
                            UrlImageFootwear = "./Resources/Images/Man/Man.30-35/footwear_5.png",
                            UrlImageHat = "./Resources/Images/Man/Man.30-35/hat_2",
                            UrlImageOuterwear = "./Resources/Images/Man/Man.30-35/tshirt.png",
                            UrlImageUnderwear = "./Resources/Images/Man/Man.30-35/shorts_2.png"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Woman:15-20",
                            UrlImageAccessory = "./Resources/Images/Woman/Woman.15-20/umbrella.png",
                            UrlImageFootwear = "./Resources/Images/Woman/Woman.15-20/footwear_1.png",
                            UrlImageOuterwear = "./Resources/Images/Woman/Woman.15-20/jacket.png",
                            UrlImageUnderwear = "./Resources/Images/Woman/Woman.15-20/pants.png"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Woman:20-25",
                            UrlImageAccessory = "./Resources/Images/Woman/Woman.20-25/umbrella.png",
                            UrlImageFootwear = "./Resources/Images/Woman/Woman.20-25/footwear_1.png",
                            UrlImageHat = "./Resources/Images/Woman/Woman.20-25/hat_1.png",
                            UrlImageOuterwear = "./Resources/Images/Woman/Woman.20-25/t-shirt.png",
                            UrlImageUnderwear = "./Resources/Images/Woman/Woman.20-25/pants.png"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Woman:25-30",
                            UrlImageAccessory = "./Resources/Images/Woman/Woman.25-30/umbrellf.png",
                            UrlImageFootwear = "./Resources/Images/Woman/Woman.25-30/footwear_4.png",
                            UrlImageHat = "./Resources/Images/Woman/Woman.25-30/hat_1.png",
                            UrlImageOuterwear = "./Resources/Images/Woman/Woman.25-30/t-shirt.png",
                            UrlImageUnderwear = "./Resources/Images/Woman/Woman.25-30/skirt.png"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Woman:30-35",
                            UrlImageAccessory = "./Resources/Images/Woman/Woman.30-35/umbrella.png",
                            UrlImageFootwear = "./Resources/Images/Woman/Woman.30-35/footwear_4.png",
                            UrlImageHat = "./Resources/Images/Woman/Woman.30-35/hat_1.png",
                            UrlImageOuterwear = "./Resources/Images/Woman/Woman.30-35/frock.png"
                        });
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.CompositionOfStyle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClothingItemId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<long>("StyleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClothingItemId");

                    b.HasIndex("StyleId");

                    b.ToTable("CompositionOfStyles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClothingItemId = 1L,
                            StyleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            ClothingItemId = 2L,
                            StyleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            ClothingItemId = 3L,
                            StyleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            ClothingItemId = 4L,
                            StyleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            ClothingItemId = 5L,
                            StyleId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            ClothingItemId = 6L,
                            StyleId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            ClothingItemId = 7L,
                            StyleId = 2L
                        },
                        new
                        {
                            Id = 8L,
                            ClothingItemId = 8L,
                            StyleId = 2L
                        });
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.MatchingStyleToWeather", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<long>("StyleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<long>("WeatherSettingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StyleId");

                    b.HasIndex("WeatherSettingId");

                    b.ToTable("MatchingStyleToWeathers");
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.RangeRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<double>("MaxTemperarure")
                        .HasColumnType("float");

                    b.Property<double>("MinTemperature")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RangeRules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            MaxTemperarure = 15.0,
                            MinTemperature = 10.0
                        },
                        new
                        {
                            Id = 2L,
                            MaxTemperarure = 20.0,
                            MinTemperature = 15.0
                        },
                        new
                        {
                            Id = 3L,
                            MaxTemperarure = 25.0,
                            MinTemperature = 20.0
                        },
                        new
                        {
                            Id = 4L,
                            MaxTemperarure = 30.0,
                            MinTemperature = 25.0
                        },
                        new
                        {
                            Id = 5L,
                            MaxTemperarure = 35.0,
                            MinTemperature = 30.0
                        });
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.Style", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenderType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            GenderType = 1,
                            Name = "Женский образ"
                        },
                        new
                        {
                            Id = 2L,
                            GenderType = 2,
                            Name = "Мужской образ"
                        });
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.WeatherSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BooleanRuleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RangeRuleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BooleanRuleId");

                    b.HasIndex("RangeRuleId");

                    b.ToTable("WeatherSettings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BooleanRuleId = 6L,
                            Name = "Холодно, без ветра",
                            RangeRuleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            BooleanRuleId = 5L,
                            Name = "Холодно, с ветром",
                            RangeRuleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            BooleanRuleId = 1L,
                            Name = "Холодно, с дождем",
                            RangeRuleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            BooleanRuleId = 2L,
                            Name = "Холодно, без дождя",
                            RangeRuleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            BooleanRuleId = 6L,
                            Name = "Прохладно, без ветра",
                            RangeRuleId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            BooleanRuleId = 5L,
                            Name = "Прохладно, с ветром",
                            RangeRuleId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            BooleanRuleId = 1L,
                            Name = "Прохладно, с дождем",
                            RangeRuleId = 2L
                        },
                        new
                        {
                            Id = 8L,
                            BooleanRuleId = 2L,
                            Name = "Прохладно, без дождя",
                            RangeRuleId = 2L
                        },
                        new
                        {
                            Id = 9L,
                            BooleanRuleId = 6L,
                            Name = "Тепло, без ветра",
                            RangeRuleId = 3L
                        },
                        new
                        {
                            Id = 10L,
                            BooleanRuleId = 5L,
                            Name = "Тепло, с ветром",
                            RangeRuleId = 3L
                        },
                        new
                        {
                            Id = 11L,
                            BooleanRuleId = 1L,
                            Name = "Тепло, с дождем",
                            RangeRuleId = 3L
                        },
                        new
                        {
                            Id = 12L,
                            BooleanRuleId = 2L,
                            Name = "Тепло, без дождя",
                            RangeRuleId = 3L
                        },
                        new
                        {
                            Id = 13L,
                            BooleanRuleId = 6L,
                            Name = "Жарко, без ветра",
                            RangeRuleId = 4L
                        },
                        new
                        {
                            Id = 14L,
                            BooleanRuleId = 5L,
                            Name = "Жарко, с ветром",
                            RangeRuleId = 4L
                        },
                        new
                        {
                            Id = 15L,
                            BooleanRuleId = 1L,
                            Name = "Жарко, с дождем",
                            RangeRuleId = 4L
                        },
                        new
                        {
                            Id = 16L,
                            BooleanRuleId = 2L,
                            Name = "Жарко, без дождя",
                            RangeRuleId = 4L
                        },
                        new
                        {
                            Id = 17L,
                            BooleanRuleId = 6L,
                            Name = "ЖАРИЩА, без ветра",
                            RangeRuleId = 5L
                        },
                        new
                        {
                            Id = 18L,
                            BooleanRuleId = 5L,
                            Name = "ЖАРИЩА, с ветром",
                            RangeRuleId = 5L
                        },
                        new
                        {
                            Id = 19L,
                            BooleanRuleId = 1L,
                            Name = "ЖАРИЩА, с дождем",
                            RangeRuleId = 5L
                        },
                        new
                        {
                            Id = 20L,
                            BooleanRuleId = 2L,
                            Name = "ЖАРИЩА, без дождя",
                            RangeRuleId = 5L
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.CompositionOfStyle", b =>
                {
                    b.HasOne("ClothingApp.Data.Common.Entities.ClothingItem", "ClothingItem")
                        .WithMany("CompositionOfStyles")
                        .HasForeignKey("ClothingItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingApp.Data.Common.Entities.Style", "Style")
                        .WithMany("CompositionOfStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.MatchingStyleToWeather", b =>
                {
                    b.HasOne("ClothingApp.Data.Common.Entities.Style", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingApp.Data.Common.Entities.WeatherSetting", "WeatherSetting")
                        .WithMany()
                        .HasForeignKey("WeatherSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothingApp.Data.Common.Entities.WeatherSetting", b =>
                {
                    b.HasOne("ClothingApp.Data.Common.Entities.BooleanRule", "BooleanRule")
                        .WithMany("WeatherSettings")
                        .HasForeignKey("BooleanRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingApp.Data.Common.Entities.RangeRule", "RangeRule")
                        .WithMany("WeatherSettings")
                        .HasForeignKey("RangeRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
